{
  "stats": {
    "suites": 1,
    "tests": 4,
    "passes": 4,
    "pending": 0,
    "failures": 0,
    "start": "2025-04-11T04:21:28.898Z",
    "end": "2025-04-11T04:21:46.751Z",
    "duration": 17853,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "f3c45821-38e4-454f-b73f-b51e50688177",
      "title": "",
      "fullFile": "/Users/marcosdominguez/Desktop/cmon-todo-it/test/testTodo.js",
      "file": "/test/testTodo.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "05db3975-6725-40c9-925a-663cd8aaed88",
          "title": "To-Do List - Pruebas Automatizadas",
          "fullFile": "/Users/marcosdominguez/Desktop/cmon-todo-it/test/testTodo.js",
          "file": "/test/testTodo.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"To-Do List - Pruebas Automatizadas\"",
              "fullTitle": "To-Do List - Pruebas Automatizadas \"before all\" hook in \"To-Do List - Pruebas Automatizadas\"",
              "timedOut": false,
              "duration": 739,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await new Builder().forBrowser(\"chrome\").build();",
              "err": {},
              "uuid": "6e5c037c-22cc-4747-974b-e3a57f4279b1",
              "parentUUID": "05db3975-6725-40c9-925a-663cd8aaed88",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"To-Do List - Pruebas Automatizadas\"",
              "fullTitle": "To-Do List - Pruebas Automatizadas \"after all\" hook in \"To-Do List - Pruebas Automatizadas\"",
              "timedOut": false,
              "duration": 56,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.quit();",
              "err": {},
              "uuid": "7eae54a3-acda-46cc-8fad-9336eea574c6",
              "parentUUID": "05db3975-6725-40c9-925a-663cd8aaed88",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Debe agregar una tarea y verificar que aparece en la tabla",
              "fullTitle": "To-Do List - Pruebas Automatizadas Debe agregar una tarea y verificar que aparece en la tabla",
              "timedOut": false,
              "duration": 3485,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.get(\"http://localhost:5173\");\nconst testTitle = \"Tarea desde Selenium\";\nconst inputs = await driver.findElements(By.css('input[type=\"text\"]'));\nconst taskInput = inputs[1];\nawait taskInput.clear();\nawait taskInput.sendKeys(testTitle);\nconst addButton = await driver.findElement(By.id(\"button\"));\nawait addButton.click();\nawait driver.sleep(3000);\nconst bodyText = await driver.findElement(By.tagName(\"body\")).getText();\nassert.ok(bodyText.includes(testTitle), \"La tarea no apareció en la tabla\");\nawait takeScreenshot(driver, \"tarea-creada\");",
              "err": {},
              "uuid": "2a9f389d-fd80-408c-ad99-66ac5dbc59f7",
              "parentUUID": "05db3975-6725-40c9-925a-663cd8aaed88",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Debe marcar una tarea como completada",
              "fullTitle": "To-Do List - Pruebas Automatizadas Debe marcar una tarea como completada",
              "timedOut": false,
              "duration": 4180,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.get(\"http://localhost:5173\");\nconst testTitle = \"Tarea para completar\";\nconst inputs = await driver.findElements(By.css('input[type=\"text\"]'));\nconst taskInput = inputs[1];\nawait taskInput.clear();\nawait taskInput.sendKeys(testTitle);\nconst addButton = await driver.findElement(By.id(\"button\"));\nawait addButton.click();\nawait driver.sleep(3000);\nconst row = await driver.wait(\n  until.elementLocated(\n    By.xpath(`//tr[td[contains(text(), '${testTitle}')]]`)\n  ),\n  8000\n);\nconst checkbox = await row.findElement(By.css('input[type=\"checkbox\"]'));\nawait checkbox.click();\nawait driver.sleep(1000);\nawait takeScreenshot(driver, \"tarea-completada\");",
              "err": {},
              "uuid": "52d726b6-473e-4185-9e64-49bf659df589",
              "parentUUID": "05db3975-6725-40c9-925a-663cd8aaed88",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Debe eliminar una tarea",
              "fullTitle": "To-Do List - Pruebas Automatizadas Debe eliminar una tarea",
              "timedOut": false,
              "duration": 4700,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.get(\"http://localhost:5173\");\nconst testTitle = \"Tarea a eliminar\";\nconst inputs = await driver.findElements(By.css('input[type=\"text\"]'));\nconst taskInput = inputs[1];\nawait taskInput.clear();\nawait taskInput.sendKeys(testTitle);\nconst addButton = await driver.findElement(By.id(\"button\"));\nawait addButton.click();\nawait driver.sleep(3000);\nconst row = await driver.wait(\n  until.elementLocated(\n    By.xpath(`//tr[td[contains(text(), '${testTitle}')]]`)\n  ),\n  8000\n);\nconst buttons = await row.findElements(By.css(\"button\"));\nawait buttons[1].click();\nawait driver.sleep(1500);\nconst bodyText = await driver.findElement(By.tagName(\"body\")).getText();\nassert.ok(!bodyText.includes(testTitle), \"La tarea no fue eliminada\");\nawait takeScreenshot(driver, \"tarea-eliminada\");",
              "err": {},
              "uuid": "6d45a3bf-8ae3-4cc5-8615-47c78c6b01f3",
              "parentUUID": "05db3975-6725-40c9-925a-663cd8aaed88",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Debe buscar una tarea por palabra clave",
              "fullTitle": "To-Do List - Pruebas Automatizadas Debe buscar una tarea por palabra clave",
              "timedOut": false,
              "duration": 4691,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.get(\"http://localhost:5173\");\nconst testTitle = \"Buscar esta Tarea\";\nconst inputs = await driver.findElements(By.css('input[type=\"text\"]'));\nconst taskInput = inputs[1];\nconst searchInput = inputs[0];\nawait taskInput.clear();\nawait taskInput.sendKeys(testTitle);\nconst addButton = await driver.findElement(By.id(\"button\"));\nawait addButton.click();\nawait driver.sleep(3000);\nawait searchInput.clear();\nawait searchInput.sendKeys(\"Buscar esta TAREA\");\nawait driver.sleep(1500);\nconst bodyText = await driver.findElement(By.tagName(\"body\")).getText();\nassert.ok(\n  bodyText.includes(testTitle),\n  \"No se encontró la tarea por búsqueda\"\n);\nawait takeScreenshot(driver, \"buscar-tarea\");",
              "err": {},
              "uuid": "aea7aa9c-c3a5-4cc4-99ec-ea0249103417",
              "parentUUID": "05db3975-6725-40c9-925a-663cd8aaed88",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2a9f389d-fd80-408c-ad99-66ac5dbc59f7",
            "52d726b6-473e-4185-9e64-49bf659df589",
            "6d45a3bf-8ae3-4cc5-8615-47c78c6b01f3",
            "aea7aa9c-c3a5-4cc4-99ec-ea0249103417"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 17056,
          "root": false,
          "rootEmpty": false,
          "_timeout": 40000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "11.1.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}